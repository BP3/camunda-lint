name: Build image

on:
  workflow_call:
    inputs:
      username:
        required: true
        type: string
      project-name:
        required: true
        type: string
      image-name:
        required: true
        type: string
      branch-name:
        required: true
        type: string

jobs:
  build-image:
    runs-on: ubuntu-latest

#TODO: for a later version when using docker metadata
    # outputs:
    #   tags: ${{ steps.generate-tag.outputs.tags }}
    #   labels: ${{ steps.generate-tag.outputs.labels }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

#TODO: try this after the initial version is working
      # - name: Generate Docker metadata
      #   id: generate-tag
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ inputs.image-name }}
      #     tags: |
      #       # For Git Tags (e.g., v1.2.3) -> create image tag 'v1.2.3'
      #       # This is our primary release mechanism.
      #       type=ref,event=tag

      #       # For the 'main' branch -> create image tag 'latest'
      #       type=raw,value=latest,enabled=${{ github.ref == 'refs/heads/main' }}

      #       # For any other branch (not main nor a tag) -> create a SHA tag
      #       # This is for development/feature branch builds.
      #       type=sha,prefix=,enabled=${{ !startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main' }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ inputs.username }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Find previous image tagged with branch name - and delete it
        run: |
          id=$(curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/orgs/bp3/packages/container/${{ inputs.project-name }}/versions" \
              | jq -r ".[] | select(.metadata.container.tags | index(\"${{ inputs.branch-name }}\")) | .id")
          if [ "$id" != "" ]; then
            # First call is just to see the result
            curl -s -L \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/orgs/bp3/packages/container/${{ inputs.project-name }}/versions/$id"
            # Second call does the actual delete
            curl -s -L -X DELETE \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/orgs/bp3/packages/container/${{ inputs.project-name }}/versions/$id"
          fi

      - name: Build Docker image of application, tag with branch name
        run: |
          echo "image-name = ${{ inputs.image-name }}"
          echo "branch-name = ${{ inputs.branch-name}}"
          docker build -t ${{ inputs.image-name }}:${{ inputs.branch-name }} .

      - name: Push to local registry
        run: |
          docker push ${{ inputs.image-name }}:${{ inputs.branch-name }}
